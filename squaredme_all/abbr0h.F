#if 0
* abbr0h.F
* abbreviations for {-F[4, {1, Col1}], F[4, {1, Col2}]} -> {F[11, {1}], F[11, {2}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 16-Feb-2017 13:39
#endif

#include "vars.h"
#include "inline.h"
#include "contains.h"


	subroutine abbr0h
	implicit none

#include "vars.h"
#include "inline.h"

	F1 = -ChainB1(Spinor(1,-1,2),0,ec(5),0,Spinor(2,1,1))

	F2 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F3 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F4 = ChainV0(Spinor(4,1,2),0,0,Spinor(2,1,1))

	F5 = ChainB1(Spinor(1,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F6 = ChainV1(Spinor(1,-1,2),0,ec(5),0,Spinor(2,1,1))

	F7 = ChainB0(Spinor(4,1,2),0,0,Spinor(2,1,1))

	F8 = ChainV1(Spinor(1,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F9 = -ChainV0(Spinor(2,1,1),1,0,Spinor(3,-1,1))

	F10 = -ChainB1(Spinor(1,-1,2),0,ec(5),1,Spinor(4,1,2))

	F11 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F12 = -ChainB0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F13 = ChainB0(Spinor(2,1,1),1,0,Spinor(3,-1,1))

	F14 = ChainV1(Spinor(1,-1,2),0,ec(5),1,Spinor(4,1,2))

	F15 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F16 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F17 = -ChainB1(Spinor(1,-1,2),0,k(3),0,Spinor(2,1,1))

	F18 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F19 = ChainV1(Spinor(1,-1,2),0,k(3),0,Spinor(2,1,1))

	F20 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F21 = -ChainB1(Spinor(1,-1,2),0,k(4),0,Spinor(2,1,1))

	F22 = ChainV1(Spinor(1,-1,2),0,k(4),0,Spinor(2,1,1))

	F23 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F24 = ChainV2(Spinor(1,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F25 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F26 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F27 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F28 = ChainV0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F29 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(2,1,1))

	F30 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F31 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F32 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(2,1,1))

	F33 = ChainV2(Spinor(4,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F34 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(2,1,1))

	F35 = ChainB2(Spinor(4,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F36 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(2,1,1))

	F37 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F38 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(2,1,1))

	F39 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F40 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(2,1,1))

	F41 = ChainV0(Spinor(3,1,2),0,0,Spinor(2,1,1))

	F42 = ChainV2(Spinor(3,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F43 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(2,1,1))

	F44 = ChainB0(Spinor(3,1,2),0,0,Spinor(2,1,1))

	F45 = ChainB2(Spinor(3,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F46 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(2,1,1))

	F47 = ChainV1(Spinor(1,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F48 = ChainB1(Spinor(1,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F49 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(3,-1,1))

	F50 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(3,-1,1))

	F51 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(4,-1,1))

	F52 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F53 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(4,-1,1))

	F54 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	Pair1 = Pair(ec(5),k(1))

	Pair2 = Pair(ec(5),k(3))

	Pair3 = Pair(ec(5),k(4))

	Pair4 = Pair(ec(5),k(2))

	Sub19 = F30*F6 - F13*(F24 + F14*MNeu(2))

	Sub21 = F31*F6 - F7*(F26 - F8*MNeu(1))

	Sub23 = F1*F30 - F4*(F25 - F5*MNeu(1))

	Sub24 = F1*F31 - F9*(F23 + F10*MNeu(2))

        Sub25 = 1/SW2*(Sub19*Sub20 - Sub21*Sub22 + 
     &      CW2*(2*Sub19*Sub20 - 2*Sub21*Sub22) + 
     &      SW2*(-2*Sub20*Sub23 + 2*Sub22*Sub24))

	Sub3507 = F10*F9*MNeu(2) + F1*(F3*MNeu(1) - F2*MNeu(2))

	Sub3683 = (F3*F6 - F7*F8)*MNeu(1) - F2*F6*MNeu(2)

	Sub3782 = F18*(F17 + F21) + F4*(F25 - 2*F11*(Pair1 + Pair4))

	Sub3789 = F20*(F17 + F21) + F9*(F23 - 2*F12*(Pair1 + Pair4))

	Sub3794 = F18*(F19 + F22) + F13*(F24 - 2*F28*(Pair1 + Pair4))

	Sub3800 = F20*(F19 + F22) + F7*(F26 - 2*F27*(Pair1 + Pair4))

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair3

        Sub26 = Sub3794 + F6*(F15 + F2*MNeu(1)) + 
     &    (F13*F14 - F3*F6)*MNeu(2)

	Sub27 = F16*F6 + Sub3683 + Sub3800

        Sub28 = Sub3782 + (F1*F2 - F4*F5)*MNeu(1) + 
     &    F1*(F15 - F3*MNeu(2))

	Sub29 = F1*F16 + Sub3507 + Sub3789

        Sub30 = 1/SW2*(CW2*(2*Sub20*Sub26 - 2*Sub22*Sub27) + 
     &      Sub20*(Sub26 - 2*SW2*Sub28) - 
     &      Sub22*(Sub27 - 2*SW2*Sub29))

	Sub5107 = F34 + 2*Abb1*F4 - F29*MNeu(2)

	Sub5117 = F36 + 2*Abb1*F7 - F32*MNeu(2)

	Sub5686 = 2*Abb2*F41 - F42 - F38*MNeu(1)

	Sub5698 = 2*Abb2*F44 - F45 - F40*MNeu(1)

	Sub9 = F43 + Sub5686

	Sub11 = F46 + Sub5698

	Sub43 = -F33 + Sub5107

	Sub45 = -F35 + Sub5117

	LOOP(Sfe6, 1,2,1)

        Sub17(HelAll(Sfe6)) = 
     &   (F51 - F52 + F47*MNeu(2))*Sub15(Sfe6) + 
     &    (F53 - F54 + F48*MNeu(2))*Sub16(Sfe6)

        Sub18(HelAll(Sfe6)) = 
     &   (F26 - F49 - F8*MNeu(1))*Sub2(Sfe6) + 
     &    (F25 - F50 - F5*MNeu(1))*Sub3(Sfe6)

        Sub9991(HelAll(Sfe6)) = 
     &   ((F41*Sub10(Sfe6) + F44*Sub13(Sfe6))*Sub17(HelAll(Sfe6)))/
     &     (U - MSf2(Sfe6,4,1)) + 
     &    (Sub18(HelAll(Sfe6))*(F4*Sub5(Sfe6) + F7*Sub8(Sfe6)))/
     &     (T24 - MSf2(Sfe6,4,1))

        Sub9990(HelAll(Sfe6)) = 
     &   (2*Abb2*(F41*Sub10(Sfe6) + F44*Sub13(Sfe6)))/
     &     (U - MSf2(Sfe6,4,1)) - 
     &    (Sub9*Sub10(Sfe6) + Sub11*Sub13(Sfe6))/(MD2 - Sub9989)

        Sub9992(HelAll(Sfe6)) = 
     &   (2*Abb1*(F4*Sub5(Sfe6) + F7*Sub8(Sfe6)))/
     &     (T24 - MSf2(Sfe6,4,1)) - 
     &    (Sub43*Sub5(Sfe6) + Sub45*Sub8(Sfe6))/(MD2 - Sub9989)

	ENDLOOP(Sfe6)

#include "contains.h"

	end


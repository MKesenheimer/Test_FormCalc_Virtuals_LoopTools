#if 0
* abbr0h.F
* abbreviations for {-F[4, {1, Col1}], F[4, {1, Col2}]} -> {F[11, {1}], F[11, {2}], V[5, {Glu5}]}
* generated by FormCalc 9.4 (7 Jun 2016) on 14-Feb-2017 17:37
#endif

#include "vars.h"
#include "inline.h"
#include "contains.h"


	subroutine abbr0h
	implicit none

#include "vars.h"
#include "inline.h"

	F1 = -ChainB1(Spinor(1,-1,2),0,ec(5),0,Spinor(2,1,1))

	F2 = ChainB0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F3 = -ChainV0(Spinor(4,1,2),0,0,Spinor(3,-1,1))

	F4 = ChainV1(Spinor(1,-1,2),0,ec(5),0,Spinor(2,1,1))

	F5 = ChainV0(Spinor(4,1,2),0,0,Spinor(2,1,1))

	F6 = ChainB1(Spinor(1,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F7 = ChainB0(Spinor(4,1,2),0,0,Spinor(2,1,1))

	F8 = ChainV1(Spinor(1,-1,2),0,ec(5),0,Spinor(3,-1,1))

	F9 = -ChainV0(Spinor(2,1,1),1,0,Spinor(3,-1,1))

	F10 = -ChainB1(Spinor(1,-1,2),0,ec(5),1,Spinor(4,1,2))

	F11 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F12 = ChainB0(Spinor(2,1,1),1,0,Spinor(3,-1,1))

	F13 = ChainV1(Spinor(1,-1,2),0,ec(5),1,Spinor(4,1,2))

	F14 = -ChainB0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F15 = ChainV1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F16 = -ChainB1(Spinor(4,1,2),0,k(1),0,Spinor(3,-1,1))

	F17 = -ChainB1(Spinor(1,-1,2),0,k(3),0,Spinor(2,1,1))

	F18 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F19 = -ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(3,-1,1))

	F20 = ChainV1(Spinor(1,-1,2),0,k(3),0,Spinor(2,1,1))

	F21 = -ChainB1(Spinor(1,-1,2),0,k(4),0,Spinor(2,1,1))

	F22 = ChainV1(Spinor(1,-1,2),0,k(4),0,Spinor(2,1,1))

	F23 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F24 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F25 = ChainV2(Spinor(1,-1,2),0,ec(5),k(3),1,Spinor(4,1,2))

	F26 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(3,-1,1))

	F27 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(4),0,Spinor(3,-1,1))

	F28 = ChainV0(Spinor(1,-1,2),0,1,Spinor(4,1,2))

	F29 = ChainV1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F30 = -ChainB1(Spinor(4,1,2),0,k(2),0,Spinor(3,-1,1))

	F31 = ChainB1(Spinor(4,1,2),0,ec(5),0,Spinor(2,1,1))

	F32 = ChainV1(Spinor(4,1,2),0,ec(5),0,Spinor(2,1,1))

	F33 = ChainV2(Spinor(4,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F34 = ChainV2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(2,1,1))

	F35 = ChainB2(Spinor(4,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F36 = ChainB2(Spinor(4,1,2),0,ec(5),k(3),0,Spinor(2,1,1))

	F37 = -ChainV0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F38 = ChainB1(Spinor(3,1,2),0,ec(5),0,Spinor(2,1,1))

	F39 = -ChainB0(Spinor(1,-1,2),0,0,Spinor(4,-1,1))

	F40 = ChainV1(Spinor(3,1,2),0,ec(5),0,Spinor(2,1,1))

	F41 = ChainV0(Spinor(3,1,2),0,0,Spinor(2,1,1))

	F42 = ChainV2(Spinor(3,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F43 = ChainV2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(2,1,1))

	F44 = ChainB0(Spinor(3,1,2),0,0,Spinor(2,1,1))

	F45 = ChainB2(Spinor(3,1,2),0,ec(5),k(1),0,Spinor(2,1,1))

	F46 = ChainB2(Spinor(3,1,2),0,ec(5),k(4),0,Spinor(2,1,1))

	F47 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(3,-1,1))

	F48 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(3,-1,1))

	F49 = ChainV1(Spinor(1,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F50 = ChainB1(Spinor(1,-1,2),0,ec(5),0,Spinor(4,-1,1))

	F51 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	F52 = -ChainV2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(4,-1,1))

	F53 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(2),0,Spinor(4,-1,1))

	F54 = -ChainB2(Spinor(1,-1,2),0,ec(5),k(3),0,Spinor(4,-1,1))

	Pair1 = Pair(ec(5),k(1))

	Pair2 = Pair(ec(5),k(3))

	Pair3 = Pair(ec(5),k(4))

	Pair4 = Pair(ec(5),k(2))

	Sub26 = F29*F4 - F12*(F25 + F13*MNeu(2))

	Sub27 = F30*F4 - F7*(F27 - F8*MNeu(1))

	Sub28 = F1*F29 - F5*(F24 - F6*MNeu(1))

	Sub29 = F1*F30 - F9*(F23 + F10*MNeu(2))

        Sub30 = 1/SW2*(CW2*(2*Sub20*Sub26 - 2*Sub22*Sub27) + 
     &      Sub20*(Sub26 - 2*SW2*Sub28) - 
     &      Sub22*(Sub27 - 2*SW2*Sub29))

	Sub3550 = F10*F9*MNeu(2) + F1*(F2*MNeu(1) - F3*MNeu(2))

	Sub3718 = F18*(F17 + F21) + F5*(F24 - 2*F11*(Pair1 + Pair4))

	Sub3725 = F19*(F17 + F21) + F9*(F23 - 2*F14*(Pair1 + Pair4))

	Sub3730 = F18*(F20 + F22) + F12*(F25 - 2*F28*(Pair1 + Pair4))

	Sub3736 = F19*(F20 + F22) + F7*(F27 - 2*F26*(Pair1 + Pair4))

	Sub3843 = (F2*F4 - F7*F8)*MNeu(1) - F3*F4*MNeu(2)

	Abb1 = Pair1 - Pair2

	Abb2 = Pair1 - Pair3

        Sub19 = Sub3730 + F4*(F15 + F3*MNeu(1)) + 
     &    (F12*F13 - F2*F4)*MNeu(2)

	Sub21 = F16*F4 + Sub3736 + Sub3843

        Sub23 = Sub3718 + (F1*F3 - F5*F6)*MNeu(1) + 
     &    F1*(F15 - F2*MNeu(2))

	Sub24 = F1*F16 + Sub3550 + Sub3725

        Sub25 = 1/SW2*(Sub19*Sub20 - Sub21*Sub22 + 
     &      CW2*(2*Sub19*Sub20 - 2*Sub21*Sub22) + 
     &      SW2*(-2*Sub20*Sub23 + 2*Sub22*Sub24))

	Sub5041 = F34 + 2*Abb1*F5 - F31*MNeu(2)

	Sub5051 = F36 + 2*Abb1*F7 - F32*MNeu(2)

	Sub5752 = 2*Abb2*F41 - F42 - F38*MNeu(1)

	Sub5764 = 2*Abb2*F44 - F45 - F40*MNeu(1)

	Sub15 = F43 + Sub5752

	Sub16 = F46 + Sub5764

	Sub39 = -F33 + Sub5041

	Sub41 = -F35 + Sub5051

	LOOP(Sfe6, 1,2,1)

        Sub17(HelAll(Sfe6)) = 
     &   (F27 - F47 - F8*MNeu(1))*Sub2(Sfe6) + 
     &    (F24 - F48 - F6*MNeu(1))*Sub3(Sfe6)

        Sub18(HelAll(Sfe6)) = 
     &   (F51 - F52 - F49*MNeu(2))*Sub13(Sfe6) - 
     &    (F53 - F54 + F50*MNeu(2))*Sub14(Sfe6)

        Sub10004(HelAll(Sfe6)) = 
     &   -(Sub17(HelAll(Sfe6))/(MD2 - Sub10002)) + 
     &    (2*Abb1*(F26*Sub2(Sfe6) + F11*Sub3(Sfe6)))/
     &     (T - MSf2(Sfe6,4,1))

        Sub10005(HelAll(Sfe6)) = 
     &   (2*Abb2*(F37*Sub13(Sfe6) + F39*Sub14(Sfe6)))/
     &     (T14 - MSf2(Sfe6,4,1)) - 
     &    Sub18(HelAll(Sfe6))/(MD2 - Sub10002)

        Sub10006(HelAll(Sfe6)) = 
     &   -(((F26*Sub2(Sfe6) + F11*Sub3(Sfe6))*
     &         (Sub39*Sub5(Sfe6) + Sub41*Sub8(Sfe6)))/
     &       (T - MSf2(Sfe6,4,1))) + 
     &    ((F37*Sub13(Sfe6) + F39*Sub14(Sfe6))*
     &       (Sub16*Sub11(Sfe6) + Sub15*Sub9(Sfe6)))/
     &     (T14 - MSf2(Sfe6,4,1))

	ENDLOOP(Sfe6)

#include "contains.h"

	end

